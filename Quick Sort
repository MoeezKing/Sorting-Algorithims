#include <iostream>
using namespace std;
void swape(int arr[],int index1,int index2)
{
    int temp=arr[index1];
    arr[index1]=arr[index2];
    arr[index2]=temp;
}
int partition(int arr[],int start,int end)
{
    int boundary=end+1;
    int pivot=arr[start];//pivot as first element
    
    for(int i=end;i>=start;i--)
        if(arr[i]>=pivot)
            swape(arr,i,--boundary);
            
    return boundary;      //index of pivot  
}
void quickSort (int arr[], int start,int end)
{
    if(start>=end)
    return;
    
  int boundary=partition(arr,start,end);
  quickSort(arr,start,boundary-1); //dividing :left side
  quickSort(arr,boundary+1,end); //dividing :right side
}
void quickSort(int arr[],int size)//overloading
{
    quickSort(arr,0,size-1);
}
int main ()
{
  int array[9] = { 9,8,7,6,5,4,3,2,1};
  int arr[13]={12,100,1,3,6,99,-1111,99,1,1,3,3,99};
  quickSort (array, 9);
  quickSort(arr,13);
  
  for (int i = 0; i < 9; i++)
    cout << array[i] << "\t";
    
    cout<<endl;
    
     for (int i = 0; i < 13; i++)
    cout << arr[i] << "\t";

  return 0;
}
